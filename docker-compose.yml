version: '3.8'
networks:
  app-network:
services:
  nginx:
    image: 'nginx:stable-alpine'
    container_name: 'nginx_${APP_NAME}'
    ports:
      - '8000:8000'
      - '80:80'
    volumes:
      - './back-end:/var/www/html'
      - './front-end/dist:/usr/share/nginx/html'
      - './nginx.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php
      - mysql
    networks:
      - app-network
  mysql:
    image: 'mysql:8.0'
    container_name: 'mysql_${APP_NAME}'
    restart: unless-stopped
    tty: true
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SEVICE_NAME: mysql
    networks:
      - app-network
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 'php_${APP_NAME}'
    volumes:
      - './back-end:/var/www/html'
    ports:
      - '9000:9000'
    networks:
      - app-network
      

  npm:
    image: 'node:19.0.1-alpine3.15'
    container_name: 'npm_${APP_NAME}'
    volumes:
      - './:/usr/share/nginx/html'
    working_dir: /usr/share/nginx/html
    networks:
      - app-network
    entrypoint:
      - npm

  composer:
    image: 'composer:2.4.4'
    container_name: 'composer_${APP_NAME}'
    volumes:
      - './back-end:/var/www/html'
    working_dir: /var/www/html
    networks:
      - app-network